using System.Security.Cryptography;

namespace NoDev.Xbox360
{
    public static class KeyStorage
    {
        public static byte[] PublicKey;
        public static RSAParameters PrivateKeys;

        static KeyStorage()
        {
            PublicKey = DefaultPublicKey;

            PrivateKeys = new RSAParameters
            {
                Exponent = new byte[] {0x00, 0x01, 0x00, 0x01},
                Modulus = DefaultModulus,
                P = DefaultP,
                Q = DefaultQ,
                DP = DefaultDP,
                DQ = DefaultDQ,
                InverseQ = DefaultInverseQ,
                D = new byte[128]
            };
        }

        public static void Load(KeyVault keyVault)
        {
            PublicKey = keyVault.ConsoleCertificate;
            PrivateKeys = keyVault.SigningParameters;
        }

        private static readonly byte[] DefaultModulus = {
            0xA3, 0x1D, 0x6C, 0xE5, 0xFA, 0x95, 0xFD, 0xE8,
            0x90, 0x21, 0xFA, 0xD1, 0x0C, 0x64, 0x19, 0x2B,
            0x86, 0x58, 0x9B, 0x17, 0x2B, 0x10, 0x05, 0xB8,
            0xD1, 0xF8, 0x4C, 0xEF, 0x53, 0x4C, 0xD5, 0x4E,
            0x5C, 0xAE, 0x86, 0xEF, 0x92, 0x7B, 0x90, 0xD1,
            0xE0, 0x62, 0xFD, 0x7C, 0x54, 0x55, 0x9E, 0xE0,
            0xE7, 0xBE, 0xFA, 0x3F, 0x9E, 0x15, 0x6F, 0x6C,
            0x38, 0x4E, 0xAF, 0x07, 0x0C, 0x61, 0xAB, 0x51,
            0x5E, 0x23, 0x53, 0x14, 0x18, 0x88, 0xCB, 0x6F,
            0xCB, 0xC5, 0xD6, 0x30, 0xF4, 0x06, 0xED, 0x24,
            0x23, 0xEF, 0x25, 0x6D, 0x00, 0x91, 0x77, 0x24,
            0x9B, 0xE5, 0xA3, 0xC0, 0x27, 0x90, 0xC2, 0x97,
            0xF7, 0x74, 0x9D, 0x6F, 0x17, 0x83, 0x7E, 0xB5,
            0x37, 0xDE, 0x51, 0xE8, 0xD7, 0x1C, 0xE1, 0x56,
            0xD9, 0x56, 0xC8, 0xC3, 0xC3, 0x20, 0x9D, 0x64,
            0xC3, 0x2F, 0x8C, 0x91, 0x92, 0x30, 0x6F, 0xDB 
        };

        private static readonly byte[] DefaultP =
        {
            0xCC, 0xE7, 0x5D, 0xFE, 0x72, 0xB6, 0xFD, 0xE7,
            0x1D, 0xE3, 0x1A, 0x0E, 0xAC, 0x33, 0x7A, 0xB9,
            0x21, 0xE8, 0x8A, 0x84, 0x9B, 0xDA, 0x9F, 0x1E,
            0x58, 0x34, 0x68, 0x7A, 0xB1, 0x1D, 0x7E, 0x1C,
            0x18, 0x52, 0x65, 0x7B, 0x97, 0x8E, 0xA7, 0x6A,
            0x9D, 0xEE, 0x5A, 0x77, 0x52, 0x3B, 0x71, 0x8F,
            0x33, 0xD0, 0x49, 0x5E, 0xC3, 0x30, 0x39, 0x72,
            0x36, 0xBF, 0x1D, 0xD9, 0xF2, 0x24, 0xE8, 0x71
        };

        private static readonly byte[] DefaultQ = {
            0xCB, 0xCA, 0x58, 0x74, 0xD4, 0x03, 0x62, 0x93,
            0x06, 0x50, 0x1F, 0x42, 0xF6, 0xAA, 0x59, 0x36,
            0xA7, 0xA1, 0xF3, 0x97, 0x5C, 0x9A, 0xC8, 0x6A,
            0x27, 0xCF, 0x85, 0x05, 0x2A, 0x66, 0x41, 0x6A,
            0x7F, 0x2F, 0x84, 0xC8, 0x18, 0x13, 0xC6, 0x1D,
            0x8D, 0xC7, 0x32, 0x2F, 0x72, 0x19, 0x3F, 0xA4,
            0xED, 0x71, 0xE7, 0x61, 0xC0, 0xCF, 0x61, 0xAE,
            0x8B, 0xA0, 0x68, 0xA7, 0x7D, 0x83, 0x23, 0x0B
        };

        private static readonly byte[] DefaultDP = {
            0x4C, 0xCA, 0x74, 0xE6, 0x74, 0x35, 0x72, 0x48,
            0x58, 0x62, 0x11, 0x14, 0xE8, 0xA2, 0x4E, 0x5E,
            0xED, 0x7F, 0x49, 0xD2, 0x52, 0xDA, 0x87, 0x01,
            0x87, 0x4A, 0xF4, 0xD0, 0xEE, 0x69, 0xC0, 0x26,
            0x65, 0x53, 0x13, 0xE7, 0x52, 0xB0, 0x4A, 0xBB,
            0xE1, 0x3E, 0x3F, 0xB7, 0x32, 0x21, 0x46, 0xF8,
            0xC5, 0x11, 0x4D, 0x3D, 0xEF, 0x66, 0xB6, 0x50,
            0xC0, 0x85, 0xB5, 0x79, 0x45, 0x8F, 0x61, 0x71
        };

        private static readonly byte[] DefaultDQ = {
            0xAF, 0xDC, 0x46, 0xE7, 0x52, 0x8A, 0x35, 0x47,
            0xA1, 0x1C, 0x05, 0x4E, 0x39, 0x24, 0x99, 0xE6,
            0x43, 0x54, 0xCB, 0xAB, 0xE3, 0xDB, 0x22, 0x76,
            0x11, 0x32, 0xD0, 0x9C, 0xBB, 0x91, 0x10, 0x84,
            0x81, 0x8B, 0x15, 0x2F, 0xC3, 0x2F, 0x55, 0x38,
            0xED, 0xBF, 0x67, 0x3C, 0x70, 0x5E, 0xFF, 0x80,
            0x28, 0xF3, 0xB1, 0x73, 0xB6, 0xFA, 0x7F, 0x56,
            0x2B, 0xE1, 0xDA, 0x4E, 0x27, 0x4E, 0xC2, 0x2F
        };

        private static readonly byte[] DefaultInverseQ = {
            0x28, 0x6A, 0xBB, 0xD1, 0x93, 0x95, 0x94, 0x1A,
            0x6E, 0xED, 0xD7, 0x0E, 0xC0, 0x61, 0x2B, 0xC2,
            0xEF, 0xE1, 0x86, 0x3D, 0x34, 0x12, 0x88, 0x6F,
            0x94, 0xA4, 0x48, 0x6E, 0xC9, 0x87, 0x1E, 0x46,
            0x00, 0x46, 0x00, 0x52, 0x8E, 0x9F, 0x47, 0xC0,
            0x8C, 0xAB, 0xBC, 0x49, 0xAC, 0x5B, 0x13, 0xF2,
            0xEC, 0x27, 0x8D, 0x1B, 0x6E, 0x51, 0x06, 0xA6,
            0xF1, 0x62, 0x1A, 0xEB, 0x78, 0x2E, 0x88, 0x48
        };

        private static readonly byte[] DefaultPublicKey = {
            0x01, 0xA8, 0x09, 0x12, 0xBA, 0x26, 0xE3, 0x58,
            0x38, 0x30, 0x33, 0x33, 0x39, 0x35, 0x2D, 0x30,
            0x30, 0x31, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x02, 0x30, 0x39, 0x2D, 0x31,
            0x38, 0x2D, 0x30, 0x36, 0x00, 0x01, 0x00, 0x01,
            0xC3, 0x2F, 0x8C, 0x91, 0x92, 0x30, 0x6F, 0xDB,
            0xD9, 0x56, 0xC8, 0xC3, 0xC3, 0x20, 0x9D, 0x64,
            0x37, 0xDE, 0x51, 0xE8, 0xD7, 0x1C, 0xE1, 0x56,
            0xF7, 0x74, 0x9D, 0x6F, 0x17, 0x83, 0x7E, 0xB5,
            0x9B, 0xE5, 0xA3, 0xC0, 0x27, 0x90, 0xC2, 0x97,
            0x23, 0xEF, 0x25, 0x6D, 0x00, 0x91, 0x77, 0x24,
            0xCB, 0xC5, 0xD6, 0x30, 0xF4, 0x06, 0xED, 0x24,
            0x5E, 0x23, 0x53, 0x14, 0x18, 0x88, 0xCB, 0x6F,
            0x38, 0x4E, 0xAF, 0x07, 0x0C, 0x61, 0xAB, 0x51,
            0xE7, 0xBE, 0xFA, 0x3F, 0x9E, 0x15, 0x6F, 0x6C,
            0xE0, 0x62, 0xFD, 0x7C, 0x54, 0x55, 0x9E, 0xE0,
            0x5C, 0xAE, 0x86, 0xEF, 0x92, 0x7B, 0x90, 0xD1,
            0xD1, 0xF8, 0x4C, 0xEF, 0x53, 0x4C, 0xD5, 0x4E,
            0x86, 0x58, 0x9B, 0x17, 0x2B, 0x10, 0x05, 0xB8,
            0x90, 0x21, 0xFA, 0xD1, 0x0C, 0x64, 0x19, 0x2B,
            0xA3, 0x1D, 0x6C, 0xE5, 0xFA, 0x95, 0xFD, 0xE8,
            0xF9, 0x70, 0x0D, 0x2A, 0x89, 0x39, 0x9E, 0xD5,
            0x4E, 0x65, 0x87, 0x44, 0xF9, 0x4F, 0x20, 0x90,
            0x89, 0x41, 0x37, 0x50, 0x2E, 0xF8, 0x30, 0x08,
            0xCC, 0x6E, 0xCD, 0xD1, 0x57, 0xE7, 0xC3, 0xB7,
            0x96, 0xB0, 0x2A, 0x80, 0x59, 0xCB, 0x7E, 0x43,
            0xFB, 0xDB, 0x7E, 0x0C, 0xEF, 0x6C, 0x5E, 0x00,
            0x0B, 0x1E, 0x87, 0xE1, 0x02, 0x64, 0xA7, 0x08,
            0x24, 0x32, 0xB9, 0x53, 0x15, 0x00, 0xE9, 0xE3,
            0x53, 0x0C, 0x15, 0xE1, 0x5D, 0x59, 0xC6, 0x09,
            0xAB, 0xD1, 0x73, 0xB5, 0xEE, 0xC5, 0xE7, 0x50,
            0xBC, 0xC2, 0xB2, 0x25, 0x98, 0xBA, 0xA0, 0x0A,
            0x84, 0xF4, 0xF8, 0x2D, 0x1A, 0xD2, 0xC9, 0x7F,
            0xDC, 0xCF, 0x5D, 0x02, 0x21, 0x9A, 0x25, 0xE0,
            0x69, 0x11, 0x6C, 0xFC, 0x88, 0x06, 0x01, 0x49,
            0xF4, 0x74, 0x40, 0x8D, 0xD8, 0x91, 0xDB, 0x83,
            0xC9, 0x60, 0xCE, 0x0D, 0x7F, 0x97, 0xAA, 0x2A,
            0x36, 0xA5, 0xF0, 0x0C, 0x10, 0x63, 0xE9, 0xA9,
            0x39, 0x4F, 0xBB, 0x47, 0x6C, 0x44, 0x22, 0xF1,
            0xBE, 0x3A, 0x49, 0x01, 0xED, 0x5B, 0x47, 0x00,
            0x43, 0x21, 0xBD, 0xFB, 0xB2, 0x95, 0x9A, 0x5F,
            0xB4, 0x46, 0xF4, 0xA7, 0x12, 0x24, 0x4B, 0x0B,
            0x7F, 0xB8, 0x8E, 0xBB, 0x52, 0x83, 0x22, 0x58,
            0x1E, 0x06, 0xB7, 0xAD, 0x7A, 0x3A, 0x16, 0x7E,
            0xC8, 0xD7, 0x37, 0x81, 0x9E, 0x8A, 0xF2, 0xC4,
            0x66, 0x08, 0x88, 0xFE, 0xA7, 0x0E, 0x8F, 0x9D,
            0x87, 0x5F, 0x0E, 0x7B, 0x48, 0x9A, 0x06, 0x62,
            0xF7, 0x24, 0x25, 0xCD, 0xB0, 0x4F, 0x73, 0x68,
            0x97, 0x0C, 0xE4, 0xAD, 0xE8, 0x55, 0x9A, 0xB4,
            0xFA, 0x65, 0xB5, 0xA3, 0x58, 0xFE, 0x81, 0x40,
            0x54, 0xAA, 0x1F, 0x00, 0x2A, 0xF1, 0xDD, 0x8A,
            0x1F, 0x45, 0x4E, 0x9D, 0xFF, 0x82, 0x46, 0x5A,
            0x5A, 0x90, 0x25, 0xA0, 0x58, 0x0F, 0xF2, 0x27
        };
    }
}
